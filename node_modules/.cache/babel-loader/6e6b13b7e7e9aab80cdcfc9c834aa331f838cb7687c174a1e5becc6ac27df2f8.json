{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dalew\\\\Portfolio\\\\src\\\\components\\\\ProjectDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [project, setProject] = useState(null);\n  useEffect(() => {\n    // fetch project details from API or database using the id parameter\n    const fetchedProject = {\n      id: 1,\n      title: 'Python Event Planner',\n      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla ut lorem sed erat imperdiet mattis eu id ipsum. Nulla facilisi.',\n      githubLink: 'https://github.com/warbyd/Python-Project-Events-Planner'\n    };\n    if (id === '2') {\n      fetchedProject.id = 2;\n      fetchedProject.title = 'LilyPad';\n      fetchedProject.description = 'A social media app for Frogs!';\n      fetchedProject.githubLink = 'https://github.com/efgeri/LilyPad';\n    }\n    setProject(fetchedProject);\n  }, [id]);\n  if (!project) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: project.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: project.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"GitHub Link: \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: project.githubLink,\n        children: project.githubLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectDetail, \"bW+i+zKpwLJkvO39JnqWTq0Tnns=\", false, function () {\n  return [useParams];\n});\n_c = ProjectDetail;\nexport default ProjectDetail;\nvar _c;\n$RefreshReg$(_c, \"ProjectDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","ProjectDetail","_s","id","project","setProject","fetchedProject","title","description","githubLink","children","fileName","_jsxFileName","lineNumber","columnNumber","href","_c","$RefreshReg$"],"sources":["C:/Users/dalew/Portfolio/src/components/ProjectDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ProjectDetail = () => {\r\n  const { id } = useParams();\r\n  const [project, setProject] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // fetch project details from API or database using the id parameter\r\n    const fetchedProject = {\r\n      id: 1,\r\n      title: 'Python Event Planner',\r\n      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla ut lorem sed erat imperdiet mattis eu id ipsum. Nulla facilisi.',\r\n      githubLink: 'https://github.com/warbyd/Python-Project-Events-Planner'\r\n    };\r\n    if (id === '2') {\r\n      fetchedProject.id = 2;\r\n      fetchedProject.title = 'LilyPad';\r\n      fetchedProject.description = 'A social media app for Frogs!';\r\n      fetchedProject.githubLink = 'https://github.com/efgeri/LilyPad';\r\n    }\r\n    setProject(fetchedProject);\r\n  }, [id]);\r\n\r\n  if (!project) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{project.title}</h2>\r\n      <p>{project.description}</p>\r\n      <p>GitHub Link: <a href={project.githubLink}>{project.githubLink}</a></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectDetail;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,EAAE;EAC1B,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,cAAc,GAAG;MACrBH,EAAE,EAAE,CAAC;MACLI,KAAK,EAAE,sBAAsB;MAC7BC,WAAW,EAAE,gIAAgI;MAC7IC,UAAU,EAAE;IACd,CAAC;IACD,IAAIN,EAAE,KAAK,GAAG,EAAE;MACdG,cAAc,CAACH,EAAE,GAAG,CAAC;MACrBG,cAAc,CAACC,KAAK,GAAG,SAAS;MAChCD,cAAc,CAACE,WAAW,GAAG,+BAA+B;MAC5DF,cAAc,CAACG,UAAU,GAAG,mCAAmC;IACjE;IACAJ,UAAU,CAACC,cAAc,CAAC;EAC5B,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAER,IAAI,CAACC,OAAO,EAAE;IACZ,oBAAOJ,OAAA;MAAAU,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAC9B;EAEA,oBACEd,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAKN,OAAO,CAACG;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACxBd,OAAA;MAAAU,QAAA,EAAIN,OAAO,CAACI;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC5Bd,OAAA;MAAAU,QAAA,GAAG,eAAa,eAAAV,OAAA;QAAGe,IAAI,EAAEX,OAAO,CAACK,UAAW;QAAAC,QAAA,EAAEN,OAAO,CAACK;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACrE;AAEV,CAAC;AAACZ,EAAA,CAhCID,aAAa;EAAA,QACFH,SAAS;AAAA;AAAAkB,EAAA,GADpBf,aAAa;AAkCnB,eAAeA,aAAa;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}